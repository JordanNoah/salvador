{"version":3,"file":"modals.min.js","sources":["../../src/cases/modals.js"],"sourcesContent":["import {\r\n    changeStatusToComplete,\r\n    deleteSection\r\n} from \"local_digitalta/cases/main\";\r\nimport * as Str from \"core/str\";\r\nimport Modal from \"core/modal\";\r\nimport ModalEvents from \"core/modal_events\";\r\nimport ModalFactory from \"core/modal_factory\";\r\nimport ModalRegistry from \"core/modal_registry\";\r\n\r\nconst saveModal = class extends Modal {\r\n    static TYPE = 'local_digitalta/saveModal';\r\n    static TEMPLATE = 'local_digitalta/cases/modals/modal-save';\r\n    registerEventListeners() {\r\n        super.registerEventListeners();\r\n        this.registerCloseOnSave();\r\n        this.registerCloseOnCancel();\r\n    }\r\n};\r\nModalRegistry.register(saveModal.TYPE, saveModal, saveModal.TEMPLATE);\r\n\r\nconst deleteSectionModal = class extends Modal {\r\n    static TYPE = 'local_digitalta/deleteSectionModal';\r\n    static TEMPLATE = 'local_digitalta/cases/modals/modal-section-delete';\r\n    registerEventListeners() {\r\n        super.registerEventListeners();\r\n        this.registerCloseOnSave();\r\n        this.registerCloseOnCancel();\r\n    }\r\n};\r\nModalRegistry.register(deleteSectionModal.TYPE, deleteSectionModal, deleteSectionModal.TEMPLATE);\r\n\r\n/**\r\n * Display the save modal.\r\n */\r\nexport const showSaveModal = async () => {\r\n    const string_keys = [\r\n        { key: \"case:save\", component: \"local_digitalta\" },\r\n        { key: \"case:save:confirm\", component: \"local_digitalta\" }\r\n    ];\r\n    const strings = Str.get_strings(string_keys);\r\n    Promise.all([strings])\r\n        .then(([strings]) => displaySaveModal(strings));\r\n};\r\n\r\n/**\r\n * Display the save modal.\r\n *\r\n * @param {Array} strings The strings to display.\r\n */\r\nconst displaySaveModal = async (strings) => {\r\n    const modal = await ModalFactory.create({\r\n        type: saveModal.TYPE,\r\n        templateContext: {\r\n            modal: {\r\n                title: strings[0],\r\n                description: strings[1]\r\n            }\r\n        },\r\n        large: false,\r\n        removeOnClose: true\r\n    });\r\n    modal.show();\r\n    const $root = modal.getRoot();\r\n    $root.on(ModalEvents.save, (event) => {\r\n        event.preventDefault();\r\n        changeStatusToComplete();\r\n        modal.destroy();\r\n    });\r\n};\r\n\r\n/**\r\n * Display the delete section modal.\r\n *\r\n * @param {int} sectionid The section id.\r\n */\r\nexport const showDeleteSectionModal = async (sectionid) => {\r\n    const string_keys = [\r\n        { key: \"case:section:delete\", component: \"local_digitalta\" },\r\n        { key: \"case:section:delete:confirm\", component: \"local_digitalta\" }\r\n    ];\r\n    const strings = Str.get_strings(string_keys);\r\n    Promise.all([strings])\r\n        .then(([strings]) => displayDeleteSectionModal(strings, sectionid));\r\n};\r\n\r\n/**\r\n * Display the delete section modal.\r\n *\r\n * @param {Array} strings The strings to display.\r\n * @param {int} sectionid The section id.\r\n */\r\nconst displayDeleteSectionModal = async (strings, sectionid) => {\r\n    const modal = await ModalFactory.create({\r\n        type: deleteSectionModal.TYPE,\r\n        templateContext: {\r\n            modal: {\r\n                title: strings[0],\r\n                description: strings[1]\r\n            }\r\n        },\r\n        large: false,\r\n        removeOnClose: true\r\n    });\r\n    modal.show();\r\n    const $root = modal.getRoot();\r\n    $root.on(ModalEvents.save, (event) => {\r\n        event.preventDefault();\r\n        deleteSection(sectionid);\r\n        modal.destroy();\r\n    });\r\n};\r\n"],"names":["saveModal","Modal","registerEventListeners","registerCloseOnSave","registerCloseOnCancel","register","TYPE","TEMPLATE","deleteSectionModal","async","strings","Str","get_strings","key","component","Promise","all","then","_ref","displaySaveModal","modal","ModalFactory","create","type","templateContext","title","description","large","removeOnClose","show","getRoot","on","ModalEvents","save","event","preventDefault","destroy","_ref2","displayDeleteSectionModal","sectionid"],"mappings":"8uDAUMA,kCAAY,cAAcC,eAG5BC,+BACUA,8BACDC,2BACAC,iCALK,+DACI,2EAORC,SAASL,UAAUM,KAAMN,UAAWA,UAAUO,gBAEtDC,4CAAqB,cAAcP,eAGrCC,+BACUA,8BACDC,2BACAC,iCALK,yEACI,sFAORC,SAASG,mBAAmBF,KAAME,mBAAoBA,mBAAmBD,iCAK1DE,gBAKnBC,QAAUC,IAAIC,YAJA,CAChB,CAAEC,IAAK,YAAaC,UAAW,mBAC/B,CAAED,IAAK,oBAAqBC,UAAW,qBAG3CC,QAAQC,IAAI,CAACN,UACRO,MAAKC,WAAER,qBAAaS,iBAAiBT,mBAQxCS,iBAAmBV,MAAAA,gBACfW,YAAcC,uBAAaC,OAAO,CACpCC,KAAMvB,UAAUM,KAChBkB,gBAAiB,CACbJ,MAAO,CACHK,MAAOf,QAAQ,GACfgB,YAAahB,QAAQ,KAG7BiB,OAAO,EACPC,eAAe,IAEnBR,MAAMS,OACQT,MAAMU,UACdC,GAAGC,sBAAYC,MAAOC,QACxBA,MAAMC,oDAENf,MAAMgB,8CASwB3B,MAAAA,kBAK5BC,QAAUC,IAAIC,YAJA,CAChB,CAAEC,IAAK,sBAAuBC,UAAW,mBACzC,CAAED,IAAK,8BAA+BC,UAAW,qBAGrDC,QAAQC,IAAI,CAACN,UACRO,MAAKoB,YAAE3B,sBAAa4B,0BAA0B5B,QAAS6B,qBAS1DD,0BAA4B7B,MAAOC,QAAS6B,mBACxCnB,YAAcC,uBAAaC,OAAO,CACpCC,KAAMf,mBAAmBF,KACzBkB,gBAAiB,CACbJ,MAAO,CACHK,MAAOf,QAAQ,GACfgB,YAAahB,QAAQ,KAG7BiB,OAAO,EACPC,eAAe,IAEnBR,MAAMS,OACQT,MAAMU,UACdC,GAAGC,sBAAYC,MAAOC,QACxBA,MAAMC,yCACQI,WACdnB,MAAMgB"}