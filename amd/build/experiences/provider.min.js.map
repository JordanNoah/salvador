{"version":3,"file":"provider.min.js","sources":["../../src/experiences/provider.js"],"sourcesContent":["import {exception as displayException} from 'core/notification';\nimport Templates from 'core/templates';\nimport $ from 'jquery';\nimport Ajax from 'core/ajax';\nexport const init = () => {\n\n    let selectedPage = 1;\n\n    getExperiences(selectedPage);\n    $(document).on(\"click\", \"li.page-item.page-link.page\", function() {\n        const clickedPage = $(this).attr('attr-page');\n        if (selectedPage !== clickedPage) {\n            selectedPage = clickedPage;\n            getExperiences(selectedPage);\n        }\n    });\n};\n\nconst getExperiences = async(selectedPage) => {\n    let pagination = [{\n        page: 1,\n        selected: false\n    }, {\n        page: 2,\n        selected: false\n    }, {\n        page: 3,\n        selected: false\n    }];\n    pagination = pagination.map(item => {\n        return {\n            ...item,\n            selected: item.page == selectedPage\n        };\n    });\n\n    const request = {\n        methodname: 'local_digitalta_experiences_get_by_pagination',\n        args: {\n            'pagenumber': selectedPage,\n            'filters': JSON.stringify([])\n        }\n    };\n    const response = await Ajax.call([request])[0];\n\n    if (response.data.length === 0) {\n        Templates.renderForPromise('local_digitalta/_common/empty-view', response).then(({html, js}) => {\n            Templates.appendNodeContents(\"#list-experience-body\", html, js);\n        }).catch((error) => displayException(error));\n    } else {\n        let obj = {\"experiences\":response};\n        Templates.renderForPromise('local_digitalta/experiences/dashboard/experience-list',\n            obj\n        ).then(({html, js}) => {\n            Templates.appendNodeContents(\"#list-experience-body\", html, js);\n        }).catch((error) => displayException(error));\n    }\n\n    console.log(response);\n    Templates.renderForPromise('local_digitalta/_common/pagination', {pages: pagination}).then(({html, js}) => {\n        $(\"#digital-pagination\").empty();\n        Templates.appendNodeContents(\"#digital-pagination\", html, js);\n    }).catch((error) => displayException(error));\n};"],"names":["selectedPage","getExperiences","document","on","clickedPage","this","attr","async","pagination","page","selected","map","item","request","methodname","args","JSON","stringify","response","Ajax","call","data","length","renderForPromise","then","_ref","html","js","appendNodeContents","catch","error","obj","_ref2","console","log","pages","_ref3","empty"],"mappings":"sdAIoB,SAEZA,aAAe,EAEnBC,eAAeD,kCACbE,UAAUC,GAAG,QAAS,+BAA+B,iBAC7CC,aAAc,mBAAEC,MAAMC,KAAK,aAC7BN,eAAiBI,cACjBJ,aAAeI,YACfH,eAAeD,yBAKrBC,eAAiBM,MAAAA,mBACfC,WAAa,CAAC,CACdC,KAAM,EACNC,UAAU,GACX,CACCD,KAAM,EACNC,UAAU,GACX,CACCD,KAAM,EACNC,UAAU,IAEdF,WAAaA,WAAWG,KAAIC,OACjB,IACAA,KACHF,SAAUE,KAAKH,MAAQT,uBAIzBa,QAAU,CACZC,WAAY,gDACZC,KAAM,YACYf,qBACHgB,KAAKC,UAAU,MAG5BC,eAAiBC,cAAKC,KAAK,CAACP,UAAU,MAEf,IAAzBK,SAASG,KAAKC,0BACJC,iBAAiB,qCAAsCL,UAAUM,MAAKC,WAACC,KAACA,KAADC,GAAOA,4BAC1EC,mBAAmB,wBAAyBF,KAAMC,OAC7DE,OAAOC,QAAU,2BAAiBA,aAClC,KACCC,IAAM,aAAeb,6BACfK,iBAAiB,wDACvBQ,KACFP,MAAKQ,YAACN,KAACA,KAADC,GAAOA,6BACDC,mBAAmB,wBAAyBF,KAAMC,OAC7DE,OAAOC,QAAU,2BAAiBA,SAGzCG,QAAQC,IAAIhB,6BACFK,iBAAiB,qCAAsC,CAACY,MAAO3B,aAAagB,MAAKY,YAACV,KAACA,KAADC,GAAOA,8BAC7F,uBAAuBU,2BACfT,mBAAmB,sBAAuBF,KAAMC,OAC3DE,OAAOC,QAAU,2BAAiBA"}