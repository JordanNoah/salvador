{"version":3,"file":"comments.min.js","sources":["../../src/reactions/comments.js"],"sourcesContent":["import $ from \"jquery\";\r\nimport Template from \"core/templates\";\r\nimport Notification from \"core/notification\";\r\nimport { SELECTORS } from \"local_digitalta/reactions/selectors\";\r\nimport { reactionsAddComment, reactionsGetComments } from \"local_digitalta/repositories/reactions_repository\";\r\n\r\n/**\r\n * Send the comment to the server.\r\n * @return {void}\r\n */\r\nexport function sendComment() {\r\n    const component = $(SELECTORS.BUTTONS.comment).data(\"component\");\r\n    const componentinstance = $(SELECTORS.ACTIONS.sendComment).data(\"id\");\r\n    const comment = $(SELECTORS.COMMENTS.input).val().trim();\r\n\r\n    if (comment) {\r\n        reactionsAddComment({ component, componentinstance, comment })\r\n            .then((response) => {\r\n                if (response.result) {\r\n                    return updateUI();\r\n                }\r\n                return Notification.exception(response);\r\n            })\r\n            .fail(Notification.exception);\r\n        $(SELECTORS.COMMENTS.input).val(\"\");\r\n    }\r\n}\r\n\r\n/**\r\n * Update the comments in the UI.\r\n * @return {void}\r\n */\r\nexport async function updateUI() {\r\n    const component = $(SELECTORS.BUTTONS.comment).data(\"component\");\r\n    const componentinstance = $(SELECTORS.ACTIONS.sendComment).data(\"id\");\r\n    if (!componentinstance) {\r\n        return;\r\n    }\r\n    try {\r\n        const response = await reactionsGetComments({ component, componentinstance });\r\n        let comments = [];\r\n        if (response.result && response.comments) {\r\n            comments = response.comments.map((comment) => ({\r\n                comment: comment.comment,\r\n                created: comment.created_raw,\r\n                userfullname: comment.user.fullname,\r\n                userprofileurl: M.cfg.wwwroot + \"/user/profile.php?id=\" + comment.user.id,\r\n            }));\r\n        }\r\n        const html = await Template.render(\"local_digitalta/reactions/comments\", { comments });\r\n        $(SELECTORS.COMMENTS.list).html(html);\r\n        $(SELECTORS.ACTIONS.viewComments + SELECTORS.DATA.id(componentinstance) + \" span\").text(\r\n            comments.length ? comments.length : \"\"\r\n        );\r\n    } catch (error) {\r\n        Notification.exception(error);\r\n    }\r\n}"],"names":["updateUI","component","SELECTORS","BUTTONS","comment","data","componentinstance","ACTIONS","sendComment","response","comments","result","map","created","created_raw","userfullname","user","fullname","userprofileurl","M","cfg","wwwroot","id","html","Template","render","COMMENTS","list","viewComments","DATA","text","length","error","exception","input","val","trim","then","Notification","fail"],"mappings":"uXAgCsBA,iBACZC,WAAY,mBAAEC,qBAAUC,QAAQC,SAASC,KAAK,aAC9CC,mBAAoB,mBAAEJ,qBAAUK,QAAQC,aAAaH,KAAK,SAC3DC,4BAIKG,eAAiB,8CAAqB,CAAER,UAAAA,UAAWK,kBAAAA,wBACrDI,SAAW,GACXD,SAASE,QAAUF,SAASC,WAC5BA,SAAWD,SAASC,SAASE,KAAKR,WAC9BA,QAASA,QAAQA,QACjBS,QAAST,QAAQU,YACjBC,aAAcX,QAAQY,KAAKC,SAC3BC,eAAgBC,EAAEC,IAAIC,QAAU,wBAA0BjB,QAAQY,KAAKM,cAGzEC,WAAaC,mBAASC,OAAO,qCAAsC,CAAEf,SAAAA,+BACzER,qBAAUwB,SAASC,MAAMJ,KAAKA,0BAC9BrB,qBAAUK,QAAQqB,aAAe1B,qBAAU2B,KAAKP,GAAGhB,mBAAqB,SAASwB,KAC/EpB,SAASqB,OAASrB,SAASqB,OAAS,IAE1C,MAAOC,6BACQC,UAAUD,sGA5CrB/B,WAAY,mBAAEC,qBAAUC,QAAQC,SAASC,KAAK,aAC9CC,mBAAoB,mBAAEJ,qBAAUK,QAAQC,aAAaH,KAAK,MAC1DD,SAAU,mBAAEF,qBAAUwB,SAASQ,OAAOC,MAAMC,OAE9ChC,wDACoB,CAAEH,UAAAA,UAAWK,kBAAAA,kBAAmBF,QAAAA,UAC/CiC,MAAM5B,UACCA,SAASE,OACFX,WAEJsC,sBAAaL,UAAUxB,YAEjC8B,KAAKD,sBAAaL,+BACrB/B,qBAAUwB,SAASQ,OAAOC,IAAI"}