{"version":3,"file":"resources_repository.min.js","sources":["../../src/repositories/resources_repository.js"],"sourcesContent":["import Ajax from 'core/ajax';\r\n\r\n/**\r\n * Get all resources.\r\n *\r\n * Valid args are:\r\n * - id: The resource id\r\n * - filters: The resource filters\r\n * @method resourcesGet\r\n * @param {Object} args Arguments send to the webservice.\r\n * @return {Promise} Resolve with warnings.\r\n */\r\nexport const resourcesGet = args => {\r\n    const request = {\r\n        methodname: 'local_digitalta_resources_get',\r\n        args: args\r\n    };\r\n    return Ajax.call([request])[0];\r\n};\r\n\r\n/**\r\n * Upsert a resource.\r\n *\r\n * Valid args are:\r\n * - id: The resource id\r\n * - name: The resource name\r\n * - description: The resource description\r\n * - themes: The resource themes\r\n * - tags: The resource tags\r\n * - format: The resource format\r\n * - type: The resource type\r\n * - path: The resource path\r\n * - lang: The resource language\r\n * @method resourcesUpsert\r\n * @param {Object} args Arguments send to the webservice.\r\n * @return {Promise} Resolve with warnings.\r\n */\r\nexport const resourcesUpsert = args => {\r\n    const request = {\r\n        methodname: 'local_digitalta_resources_upsert',\r\n        args: args\r\n    };\r\n    return Ajax.call([request])[0];\r\n};\r\n\r\n/**\r\n * Get all resources types.\r\n *\r\n * @method resourcesTypesGet\r\n * @return {Promise} Resolve with warnings.\r\n */\r\nexport const resourcesTypesGet = () => {\r\n    const request = {\r\n        methodname: 'local_digitalta_resources_types_get',\r\n        args: {}\r\n    };\r\n    return Ajax.call([request])[0];\r\n};\r\n\r\n/**\r\n * Assign resources to a context.\r\n *\r\n * Valid args are:\r\n * - resourceid: The resource id\r\n * - component: The component name\r\n * - componentinstance: The component instance\r\n * - description: The description\r\n * @method resourcesAssign\r\n * @param {Object} args Arguments send to the webservice.\r\n * @return {Promise} Resolve with warnings.\r\n */\r\nexport const resourcesAssign = args => {\r\n    const request = {\r\n        methodname: 'local_digitalta_resources_assign',\r\n        args: args\r\n    };\r\n    return Ajax.call([request])[0];\r\n};\r\n\r\n/**\r\n * Unassign resources from a context.\r\n *\r\n * Valid args are:\r\n * - id: The resource id\r\n * - component: The component name\r\n * - componentinstance: The component instance\r\n * @method resourcesUnassign\r\n * @param {Object} args Arguments send to the webservice.\r\n * @return {Promise} Resolve with warnings.\r\n */\r\nexport const resourcesUnassign = args => {\r\n    const request = {\r\n        methodname: 'local_digitalta_resources_unassign',\r\n        args: args\r\n    };\r\n    return Ajax.call([request])[0];\r\n};\r\n\r\n/**\r\n * Get the resources assigned to a component.\r\n *\r\n * Valid args are:\r\n * - component: The component name\r\n * - componentinstance: The component instance\r\n * @method resourcesGetComponentAssignments\r\n * @param {Object} args Arguments send to the webservice.\r\n * @return {Promise} Resolve with warnings.\r\n */\r\nexport const resourcesGetComponentAssignments = args => {\r\n    const request = {\r\n        methodname: 'local_digitalta_resources_get_assignments_for_component',\r\n        args: args\r\n    };\r\n    return Ajax.call([request])[0];\r\n};\r\n"],"names":["args","request","methodname","Ajax","call"],"mappings":"saAY4BA,aAClBC,QAAU,CACZC,WAAY,gCACZF,KAAMA,aAEHG,cAAKC,KAAK,CAACH,UAAU,6BAoBDD,aACrBC,QAAU,CACZC,WAAY,mCACZF,KAAMA,aAEHG,cAAKC,KAAK,CAACH,UAAU,+BASC,IAKtBE,cAAKC,KAAK,CAJD,CACZF,WAAY,sCACZF,KAAM,MAEkB,4BAeDA,aACrBC,QAAU,CACZC,WAAY,mCACZF,KAAMA,aAEHG,cAAKC,KAAK,CAACH,UAAU,+BAcCD,aACvBC,QAAU,CACZC,WAAY,qCACZF,KAAMA,aAEHG,cAAKC,KAAK,CAACH,UAAU,8CAagBD,aACtCC,QAAU,CACZC,WAAY,0DACZF,KAAMA,aAEHG,cAAKC,KAAK,CAACH,UAAU"}